/* Nullable attributes 
-- Author  
● Edition 
● Genre 
● Language 
● Publisher 
● Date of Publication 
● Prequel 
● Damage 
● Date of Borrowing 
● Due date 
● Date of return  */

CREATE TABLE Books
(bookID integer PRIMARY KEY,
title varchar(100) NOT NULL,
pages integer NOT NULL,
CONSTRAINT pages_greater_than_zero
CHECK (pages > 0));

CREATE TABLE Resources
(physicalID integer PRIMARY KEY,
bookID integer NOT NULL,
damaged BOOLEAN DEFAULT false NOT NULL,
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID)
);

CREATE TABLE Prequels
(bookID INTEGER,
prequelID INTEGER,
PRIMARY KEY (bookID,prequelID),
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID),
CONSTRAINT fk_prequelID
FOREIGN KEY (prequelID) REFERENCES Books(bookID));

CREATE TABLE Edition
(bookID INTEGER,
ISBN varchar(20) NOT NULL,
edition Integer,
publisher varchar(100),
DoP Date,
PRIMARY KEY (bookID),
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID),
CONSTRAINT edition_greater_than_zero
CHECK (edition > 0));

CREATE TABLE Author
(bookID integer,
author varchar(100),
PRIMARY KEY (bookID, author),
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID));

CREATE TABLE Genre
(bookID integer,
genre varchar(100),
PRIMARY KEY (bookID, genre),
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID));

CREATE TABLE Language
(bookID INTEGER,
language varchar(100),
PRIMARY KEY (bookID, language),
CONSTRAINT fk_bookID
FOREIGN KEY (bookID) REFERENCES Books(bookID));

CREATE TABLE Users
(userID integer PRIMARY KEY,
name varchar(100) NOT NULL,
address varchar(100) NOT NULL,
email varchar(50) NOT NULL,
CONSTRAINT proper_email CHECK (email ~* '^[A-Za-z0-9._+%-]+@kth.se')
);

CREATE TABLE Students
(userID integer NOT NULL,
program varchar(100),
PRIMARY KEY (userID),
CONSTRAINT fk_userID
FOREIGN KEY (userID) REFERENCES Users(userID)
);

CREATE TABLE Admins
(userID integer NOT NULL,
department varchar(100) NOT NULL,
phoneNumber varchar(15) NOT NULL,
PRIMARY KEY (userID),
CONSTRAINT fk_userID
FOREIGN KEY (userID) REFERENCES Users(userID)
);

CREATE TABLE Borrowing
(borrowingID Integer PRIMARY KEY,
physicalID integer NOT NULL,
userID integer NOT NULL,
DoB DATE DEFAULT CURRENT_DATE,
DoR DATE,
DoE DATE DEFAULT CURRENT_DATE+7,
CONSTRAINT return_after_borrow
CHECK (DoR >= DoB),
CONSTRAINT fk_userID
FOREIGN KEY (userID) REFERENCES Users(userID),
CONSTRAINT fk_physicalID
FOREIGN KEY (physicalID) REFERENCES Resources(physicalID)
);

CREATE TYPE pMethod AS ENUM ('Klarna', 'Swish', 'Card','Cash');

CREATE TABLE Fines
(borrowingID integer NOT NULL,
Amount integer NOT NULL,
PRIMARY KEY (borrowingID),
CONSTRAINT fk_borrowingID
FOREIGN KEY (borrowingID)
        REFERENCES Borrowing(borrowingID),
CONSTRAINT fine_greater_than_zero
CHECK (Amount > 0)
);
 
CREATE TABLE TRANSACTIONS
(transactionID integer PRIMARY KEY,
 borrowingID integer NOT NULL,
 paymentMethod pMethod NOT NULL,
 DoP DATE NOT NULL,
 CONSTRAINT fk_borrowingID
 FOREIGN KEY (borrowingID)
        REFERENCES Borrowing(borrowingID)
 );
 
--drop table admins,author,books,borrowing,edition,fines,genre,language,prequels,resources,students,transactions,users; 
 